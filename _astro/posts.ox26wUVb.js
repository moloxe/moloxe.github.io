import{G as f,a as d}from"./utils.CQiKqG6B.js";const p={src:"/_astro/generic.DwdIj1sk.jpg"};function m({title:e,categories:t,container:s}){const i=`${e} ${t.join(" ")} ${s.map(({text:l,type:u})=>u==="MarkdownBlock"?l.length:"x ".repeat(35)).join(" ")}`.split(" ").length;return Math.ceil(i/80)}const w=({container:e,slugUrl:t})=>{const s=e.find(({type:n})=>["ImageBlock","GiphyBlock","LinkBlock"].includes(n));let r;return s?.type==="ImageBlock"&&s?.text&&(r=`/blog/${t}/img${s.text}`),s?.type==="GiphyBlock"&&(r=f.getGifById(d.getIdFromGiphyBlock(s?.text??""))),r||(r=p.src),r},P=async e=>{const{title:t,creationDate:s,categories:r,slugUrl:n,isPinned:o}=e,i=m(e),c=w(e);return{title:t,creationDate:s,categories:r,slugUrl:n,imageURL:c,readingTime:i,isPinned:o}},h=e=>({...e,creationDate:new Date(e.creationDate),lastUpdate:new Date(e.lastUpdate)});function U(e){let t=e.toLowerCase().replaceAll(" ","-").split("").filter(s=>{if(s==="-")return!0;const r=s.charCodeAt(0),n=r>=97&&r<=122,o=r>=48&&r<=57;return n||o}).join("");for(;t.includes("--");)t=t.replaceAll("--","-");for(;t.startsWith("-");)t=t.substring(1);for(;t.endsWith("-");)t=t.substring(0,t.length-1);return t}const a="http://localhost:6969",g={async getPosts(){let t=(await(await fetch(`${a}/post`)).json()).posts;return t=t.map(h),t},async getCategories(){const e=await g.getPosts(),t={},s=e.map(({categories:o})=>o).flat(),r=new Set(s),n=Array.from(r);return s.forEach(o=>{t[o]=(t[o]??0)+1}),n.sort((o,i)=>{const c=t[o],l=t[i];return c===l?o.localeCompare(i):l-c}),n},async getPostCards(){const e=await g.getPosts(),t=[];for(let s=0;s<e.length;s++){const r=await P(e[s]);t.push(r)}return t},async getPinnedPostCard(){let e=await g.getPostCards();return e=e.filter(t=>t.isPinned),e},async getPost(e){const s=(await g.getPosts()).find(r=>r.slugUrl===e);if(!s)throw new Error("Post not found.");return s},async getPinnedPostCards(){return(await g.getPosts()).filter(s=>s.isPinned)},async createPost(e){const t=await fetch(`${a}/post`,{method:"POST",body:JSON.stringify({title:e})});if(!t.ok)throw new Error("Error creating post.");return(await t.json()).slugUrl},async updatePost(e){const t=await fetch(`${a}/post`,{method:"PUT",body:JSON.stringify({post:e})});if(!t.ok)throw new Error("Error updating post.");return(await t.json()).slugUrl},async updateTitle(e,t){const s=await fetch(`${a}/post-title`,{method:"PATCH",body:JSON.stringify({oldTitle:e,newTitle:t})});if(!s.ok)throw new Error("Error updating post title.");return(await s.json()).slugUrl},async getPostImages(e){return(await(await fetch(`${a}/image/${e}`)).json()).images},async getPostImage(e,t){const r=await(await fetch(`${a}/image/${e}/${t}`)).arrayBuffer();return Buffer.from(r)},async uploadPostImage(e,t){const s=new FormData;return s.append("image",t),await(await fetch(`${a}/image/${e}`,{method:"POST",body:s})).text()}};export{g as P,m as c,U as s};
